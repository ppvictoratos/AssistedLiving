//
//  AppDelegate.swift
//  NINEMUSES
//
//  Created by Petie Positivo on 6/22/23.
//  Generated by ChatGPT
//

import Foundation
import UIKit
import SpotifyiOS

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate, SPTAppRemoteDelegate {

    var window: UIWindow?
    var appRemote: SPTAppRemote?

    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        // Set up and configure the Spotify iOS SDK
        
        // Set the client ID and redirect URL
        let configuration = SPTConfiguration(clientID: Constants.spotifyClientID, redirectURL: URL(string: Constants.spotifyRedirectUri)!)
        
        // Set the token swap and refresh URLs (if applicable)
        // configuration.tokenSwapURL = URL(string: "YOUR_TOKEN_SWAP_URL")
        // configuration.tokenRefreshURL = URL(string: "YOUR_TOKEN_REFRESH_URL")
        
        // Initialize the app remote
        appRemote = SPTAppRemote(configuration: configuration, logLevel: .debug)
        appRemote?.delegate = self
        
        // Connect to the Spotify app
        if let _ = appRemote?.authorizeAndPlayURI("") {
            // Handle the successful authorization and playback
        } else {
            // Handle the authorization error
        }
        
        // Override point for customization after application launch.
        return true
    }

    // MARK: - SPTAppRemoteDelegate
    
    func appRemoteDidEstablishConnection(_ appRemote: SPTAppRemote) {
        // Handle the established connection with the Spotify app
    }
    
    func appRemote(_ appRemote: SPTAppRemote, didFailConnectionAttemptWithError error: Error?) {
        // Handle the connection failure with the Spotify app
    }
    
    func appRemote(_ appRemote: SPTAppRemote, didDisconnectWithError error: Error?) {
        // Handle the disconnection from the Spotify app
    }

    // ... Additional app delegate methods ...
}
